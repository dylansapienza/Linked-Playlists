/*
    The home for all Spotify API Calls Defined
*/

//Required Modules
const mongoose = require("mongoose");
const request = require("request");
const User = require("../modules/User");

mongoose.connect(
  "mongodb+srv://dylansap:spotifyapp@spotifyapp-eey1y.mongodb.net/test?retryWrites=true&w=majority",
  { dbName: "spotifyapp" }
);

module.exports = {
  createPlaylist: async function createPlaylist(queryemail) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        User.findOne({ email: queryemail })
          .exec()
          .then((doc) => {
            console.log(doc);
            const query_userid = doc.id;
            const query_token = doc.access_token;
            const query_name = doc.name;
            const playlist_name = query_name + "'s Recommended Playlist";
            const playlist_description = "Auto-Generated By SpotifyPlaylistApp";

            var headers = {
              Accept: "application/json",
              "Content-Type": "application/json",
              Authorization: "Bearer " + query_token,
            };

            var dataString =
              '{"name":"' +
              playlist_name +
              '","description":"' +
              playlist_description +
              '","public":true}';

            var options = {
              url:
                "https://api.spotify.com/v1/users/" +
                query_userid +
                "/playlists",
              method: "POST",
              headers: headers,
              body: dataString,
            };

            function callback(error, response, body) {
              if (!error && response.statusCode == 201) {
                console.log(body);
                resolve("sucesss!");
              } else {
                console.log(error);
                if (response.statusCode === 401) {
                  resolve("Authorization Token Expired or Invalid");
                } else {
                  resolve("Great Failure:" + response.statusCode);
                }
              }
            }

            request(options, callback);
          })
          .catch((err) => {
            console.log(err);
          });
      }, 3000);
    });
  },
};
